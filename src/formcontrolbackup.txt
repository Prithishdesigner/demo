import './App.css';
import React, { useState } from 'react';
import { Container } from 'react-bootstrap';
import { ToastContainer, toast } from 'react-toastify';
  import 'react-toastify/dist/ReactToastify.css';
  import Button from 'react-bootstrap/Button';
import Col from 'react-bootstrap/Col';
import Form from 'react-bootstrap/Form';
import InputGroup from 'react-bootstrap/InputGroup';
import Row from 'react-bootstrap/Row';





function Example() {
    // Declare a new state variable, which we'll call "count"
    // const [count, setCount] = useState(0);
    

    // const [addrtype, setAddrType] = useState('Home')
    // function handleAddrTypeChange(e) {
    //     setAddrType(e.target.value);
    //     console.log(addrtype)
    // }
    const [turnover, setTurnover] = useState('');
    const [name, setName] = useState('');
    const [phoneNumber, setPhoneNumber] = useState('');
    const [email, setEmail] = useState('');
    const [isChecked, setIsChecked] = useState(false);
    const [validated, setValidated] = useState(false);
  
    const handleTurnoverChange = (event) => {
      setTurnover(event.target.value);
    };
  
    const handleNameChange = (event) => {
      setName(event.target.value);
    };
  
    const handlePhoneNumberChange = (event) => {
      setPhoneNumber(event.target.value);
    };
  
    const handleEmailChange = (event) => {
      setEmail(event.target.value);
    };
  
    const handleCheckboxChange = (event) => {
      setIsChecked(event.target.checked);
    };

    const notify = (params) => toast(params);




    const handleSubmit = (event) => {
      event.preventDefault();
      if (turnover && name && phoneNumber && email) {const formData = {turnover, name, phoneNumber, email, isChecked};

      fetch('http://localhost:3020/details', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      })
      // .then(response => response.json())
      .then(data => {
        console.log('Success:', data);
        notify("Details added successfully")
      })
      .catch(error => {
        console.error('Error:', error);
        notify("Failed to add Details")

      });
        
      } else {
        console.log('field missing');
        notify("Please fill all the fields")

      }

};

    return (
        <div>


          <div>
              <Container>
          <form onSubmit={handleSubmit} className="annual-form mt-5 mb-5" novalidate>
                <div className="mb-1">
                  <label htmlFor="turnover" className="form-label fw-semibold" style={{ fontSize: '15px' }}>Annual Turnover</label>
                  <select
                    id="turnover"
                    className="form-select form-select-sm"
                    aria-label=".form-select-sm example"
                    value={turnover}
                    onChange={handleTurnoverChange}
                  >
                    <option value="">Annual Turnover</option>
                    <option value="1">1 Cr &amp; above</option>
                    <option value="2">50 Lac - 1 Cr</option>
                    <option value="3">25-50 Lac</option>
                    <option value="4">10-25 Lac</option>
                    <option value="5">5-10 Lac</option>
                    <option value="6">Less than 5 Lac</option>
                  </select>
                </div>

                <div className="mb-1">
                  <label htmlFor="validationDefault01" className="form-label fw-semibold" style={{ fontSize: '15px' }}>Name</label>
                  <input
                    type="text"
                    className="form-control form-control-sm"
                    id="name"
                    placeholder="Name of the Contact Person"
                    value={name}
                    onChange={handleNameChange} required
                  />
                </div>

                <div className="mb-1">
                  <label htmlFor="phoneNumber" className="form-label fw-semibold" style={{ fontSize: '15px' }}>Phone Number</label>
                  <input
                    type="tel"
                    className="form-control form-control-sm"
                    id="phoneNumber"
                    placeholder="Ten Digit Mobile Number"
                    value={phoneNumber}
                    onChange={handlePhoneNumberChange}
                  />
                </div>

                <div className="mb-1">
                  <label htmlFor="email" className="form-label fw-semibold" style={{ fontSize: '15px' }}>Email address</label>
                  <input
                        type="email"
                        className="form-control form-control-sm"
                        id="email"
                        placeholder="Your Email ID"
                        value={email}
                        onChange={handleEmailChange}
                        pattern="^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$"
                      />
                </div>

                <div className="mb-1 form-check">
                  <input
                    type="checkbox"
                    className="form-check-input mt-2"
                    id="isChecked"
                    checked={isChecked}
                    onChange={handleCheckboxChange}
                  />
                  <label htmlFor="isChecked" className="form-check-label form-control-sm fw-semibold ps-1">Check me out</label>
                </div>

                <div className="float">
                  <p style={{ fontSize: '12px', textAlign:'justify'}}>By clicking on "Apply Now", I agree to Indifi's Privacy Policy (including the ‘purpose’ of collection of my information); and T&C (collectively the “Terms”). Subject to applicable laws, I also give my consent and consent on behalf of any persons</p></div>

                  <div className="d-grid gap-2 col-12">
                <button onClick={handleSubmit} type="submit" className="btn btn-outline-primary Apply-now">Apply Now</button>
                
                {/* <button type="submit" className="btn btn-outline-primary Apply-now">Back</button> */}
              </div>

          </form>
          </Container>
          </div>
            {/* <p>You clicked {count} times</p>
            <button onClick={() => setCount(count + 1)}>
                Click me
            </button>
            <button onClick={() => setCount(count + 5)}>touch me</button>




            <select
                defaultValue={addrtype}
                onChange={handleAddrTypeChange}
                className="browser-default custom-select">

                <option selected value="1">Home</option>
                <option value="2">Marketing</option>
                <option value="3">Work</option>
                <option value="4">Head Office</option>

            </select> */}

       
  


        </div>
    );
}
export default Example;


















import React, { useState } from 'react';
import { Container } from 'react-bootstrap';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import Button from 'react-bootstrap/Button';
import Col from 'react-bootstrap/Col';
import Form from 'react-bootstrap/Form';
import InputGroup from 'react-bootstrap/InputGroup';
import Row from 'react-bootstrap/Row';

function FormExample() {
  const [validated, setValidated] = useState(false);






  
  const notify = (params) => toast(params);





  const handleSubmit = (event) => {
    const form = event.currentTarget;
    if (form.checkValidity() === false) {
      event.preventDefault();
      event.stopPropagation();
    }

    setValidated(true);

    if (validated) {
    const formData = {validated};

    fetch('http://localhost:3020/details', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(formData)
    })
    // .then(response => response.json())
    .then(data => {
      console.log('Success:', data);
      notify("Details added successfully")
    })
    .catch(error => {
      console.error('Error:', error);
      notify("Failed to add Details")

    });
      
    } else {
      console.log('field missing');
      notify("Please fill all the fields")

    }



    
  };

  return (
    <div>
    <Container>
    <Form noValidate validated={validated} onSubmit={handleSubmit} className="annual-form mt-5 mb-5">

      <Form.Group as={Col} controlId="formGridState">
                <Form.Label>Annual Turnover</Form.Label>
                <Form.Select defaultValue="Annual Turnover">
                  <option>Annual Turnover</option>
                  <option>1 Cr & Above</option>
                  <option>50 lac - 1 Cr</option>
                  <option>25 lac - 50 lac</option>
                  <option>10 lac - 25 lac</option>
                  <option>5 lac - 10 lac</option>
                  <option>Less than 5 lac</option>
                </Form.Select>
         </Form.Group>
     
        <Form.Group as={Col} md="4" controlId="validationCustom01">
          <Form.Label>First name</Form.Label>
          <Form.Control
            required
            type="text"
            placeholder="First name"   
          />
          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>
        </Form.Group>


        <Form.Group as={Col} md="4" controlId="validationCustom02">
          <Form.Label>Phone Number</Form.Label>
          <Form.Control
            required
            type="tel"
            placeholder="Phone number"           
          />       
          <Form.Control.Feedback type="invalid">
            Please provide a valid phone number.
          </Form.Control.Feedback>
        </Form.Group>


        <Form.Group as={Col} md="4" controlId="exampleForm.ControlInput1">
        <Form.Label>Email address</Form.Label>
        <Form.Control
        required 
        type="email" 
        placeholder="Enter email" />
      </Form.Group>
      
    
      <Form.Group className="mb-3">
        <Form.Check
          required
          label="Agree to terms and conditions"
          feedback="You must agree before submitting."
          feedbackType="invalid"
        />
      </Form.Group>
      <Button type="submit">Apply Now</Button>
    </Form>
    </Container>
    </div>
  );
}

export default FormExample;